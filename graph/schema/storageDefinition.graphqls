enum StorageTypeEnum {
  S3
  Other
}


type S3StorageConfig {
  bucket: String!
  endpoint: String!
  access: String!
  secret: String!
}

type OtherStorageConfig {
    _empty: String
}

union StorageConfig = S3StorageConfig | OtherStorageConfig

type StorageDefinition {
  id: ID!
  identifier: String!
  #type: StorageTypeEnum!  This is expressed in type of config
  config: StorageConfig!
  isEnabled: Boolean!
  priority: Int!
}


extend type Viewer {
  storageDefinitions: [StorageDefinition!]! @isSiteOwner
  getStorageDefinition(id: ID!): StorageDefinition @isSiteOwner
}

input createStorageDefinitionInput {
  identifier: String!
  storageType: StorageTypeEnum!
  configJSON: String!
  isEnabled: Boolean!
  priority: Int!
}

input updateStorageDefinitionInput {
  identifier: String!
  configJSON: String
  isEnabled: Boolean
  priority: Int
}

extend type Mutation {
  createStorageDefinition(input: createStorageDefinitionInput!): StorageDefinition @isSiteOwner
  updateStorageDefinition(input: updateStorageDefinitionInput!): StorageDefinition @isSiteOwner
}